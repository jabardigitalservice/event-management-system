name: Build Event services

on:
  push:
    branches:
      - event-service
    paths:
      - service/**
      - .github/workflows/build-event-service-staging.yml

defaults:
  run:
    working-directory: service

jobs:
  deploy:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure Docker
        run: |
          docker login ${{ secrets.REGISTRY_URL_EVENT }} -u ${{ secrets.REGISTRY_USERNAME_EVENT }} -p "${{ secrets.REGISTRY_PASSWORD_EVENT }}"

      - name: Set version tag
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          file: service/.docker/Dockerfile
          context: ./service
          push: true
          tags: ${{ secrets.EVENT_SERVICE_IMAGENAME }}:${{ env.sha_short }}-test

      # GitOps
      - name: GitOps ArgoCD Setup
        run: |
          echo "${{ secrets.GITLAB_ARGOCD_KEY }}" > /tmp/gitlab-deploy-ssh-key
          chmod 600 /tmp/gitlab-deploy-ssh-key
          export GIT_SSH_COMMAND="ssh -i /tmp/gitlab-deploy-ssh-key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
          git clone ${{ secrets.GITLAB_ARGOCD_REPOSITORY }}

      - name: GitOps ArgoCD Update Image for Development
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.spec.template.spec.containers[0].image = "${{ secrets.EVENT_SERVICE_IMAGENAME }}:${{ env.sha_short }}-test"' 'service/jds-terraform-gke/k8s/superapp/development/service-event/deployment.yaml'

      - name: GitOps ArgoCD Create Branch, Commit, Push
        run: |
          export GIT_SSH_COMMAND="ssh -i /tmp/gitlab-deploy-ssh-key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
          cd jds-terraform-gke/k8s/superapp/development/service-event
          git config user.email "github-action@github.com"
          git config user.name "Github Action"
          git checkout -b superapp-service-event-release-${{ env.sha_short }}-staging
          git add deployment.yaml
          git commit -m "Superapp Service Event ${{ env.sha_short }} to staging"
          git push origin superapp-service-event-release-${{ env.sha_short }}-staging -o merge_request.description="# Overview \n\n - Superapp Service Event Release ${{ env.sha_short }} to staging \n\n ## Evidence \n\n - title: Release Service Event ${{ env.sha_short }} to staging \n - project: Jabar Super Apps \n - participants:  " -o merge_request.create
